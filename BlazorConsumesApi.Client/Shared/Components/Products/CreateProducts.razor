@page "/edit-product"
@page "/edit-product/{id:int}"
@using BlazorConsumesApi.Client.Models
@using BlazorTest.Client.Models
@using System.Net.Http.Formatting
@using System.Text.Json
@inject HttpClient http

@if (Id == null || Id == 0)
{
   
    <h3>CreateProducts</h3>


    <EditForm Model="p" OnSubmit="Create">

        <div class="mb-3">
            <label for="name" class="form-label">Nombre del Producto</label>
            <InputText id="name" @bind-Value="p.productName" class="form-control"> </InputText>
            
        </div>
        
        <div class="mb-3">
            <label asp-for="CategoryId" class="form-label">Categoria</label>
            <InputSelect @bind-Value="p.categoryId" type="number" class="form-select mb-3">
        
                <option value="0">Seleccione una Categoria</option>

                @foreach(var a in lista)
                {
                    <option value="@a.id">@a.categoryName</option>
                }
            
            </InputSelect>
            <span asp-validation-for="ProductoraId" class="text-danger"> </span>
        </div>

        <button type="submit" class="btn btn-primary">Crear Producto</button>

    </EditForm>

}
else




{
    <h3>EditProducts</h3>

    <form>
        <div class="mb-3">
            <label for="exampleInputEmail1" class="form-label">Email address</label>
            <input type="email" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp">
            <div id="emailHelp" class="form-text">We'll never share your email with anyone else.</div>
        </div>
        <div class="mb-3">
            <label for="exampleInputPassword1" class="form-label">Password</label>
            <input type="password" class="form-control" id="exampleInputPassword1">
        </div>
        <div class="mb-3 form-check">
            <input type="checkbox" class="form-check-input" id="exampleCheck1">
            <label class="form-check-label" for="exampleCheck1">Check me out</label>
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
}




@code {

   

    protected override async Task OnInitializedAsync()
    {
        await Get();

    }

}
